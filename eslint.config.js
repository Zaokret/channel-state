import globals from 'globals'
import pluginJs from '@eslint/js'
import tseslint from 'typescript-eslint'
import pluginPrettier from 'eslint-plugin-prettier'
import configPrettier from 'eslint-config-prettier'

export default tseslint.config(
  {
    ignores: ['**/dist', '**/node_modules/'],
  },
  pluginJs.configs.recommended,
  ...tseslint.configs.recommended,
  {
    files: ['packages/**/src/**/*.{ts,tsx}', 'examples/**/src/**/*.{ts,tsx}'], // Only lint source files in src directories
    languageOptions: {
      parser: tseslint.parser,
      parserOptions: {
        project: [
          './tsconfig.base.json',
          './packages/*/tsconfig.json',
          './examples/*/tsconfig.json',
        ],
        tsconfigRootDir: import.meta.dirname,
      },
    },
    rules: {
      // Allow unused variables that start with an underscore
      '@typescript-eslint/no-unused-vars': [
        'error',
        { argsIgnorePattern: '^_' },
      ],
    },
  },
  {
    files: ['packages/**/src/**/*.{js,jsx}', 'examples/**/src/**/*.{js,jsx}'], // Only lint source files in src directories
    languageOptions: {
      globals: {
        ...globals.browser,
        ...globals.node,
      },
    },
    rules: {
      // Add JavaScript specific rules here if needed
    },
  },
  {
    files: ['**/*.cjs'], // Override for CommonJS files generated by tsup
    languageOptions: {
      globals: {
        ...globals.node,
        ...globals.browser, // Add browser globals for cjs files
      },
    },
    rules: {
      '@typescript-eslint/no-require-imports': 'off',
    },
  },
  {
    languageOptions: {
      ecmaVersion: 'latest',
      sourceType: 'module',
    },
    plugins: {
      prettier: pluginPrettier,
    },
    rules: {
      'prettier/prettier': 'error',
      'require-jsdoc': 'off',
      'valid-jsdoc': 'off',
      '@typescript-eslint/no-explicit-any': 'off',
    },
  },
  configPrettier,
)
